
这两天导表出现了一个蛋疼的问题，导出的数据只有116K左右，或者截断，检查了：
1，php.ini
2，修改了下载代码：
    readfile($this->filename);
		$dump = ob_get_contents();
		ob_end_clean();
		header('Content-Description: File Transfer');
		header('Content-Type: application/octet-stream');
		header('Content-Disposition: attachment; filename='.basename($this->filename));
		flush();
		echo $dump;
		exit();
		
		为：
		  $file = fopen($file_name,"r"); // 打开文件
			// 输入文件标签
			Header("Content-type: application/octet-stream");
			Header("Accept-Ranges: bytes");
			Header("Accept-Length: ".filesize($file_name));
			Header("Content-Disposition: attachment; filename=" . $file_name);
			// 输出文件内容
			echo fread($file,filesize($file_name));
			fclose($file);exit();
			// 另外一种方式
			// $statFile = $file_name;
	 		// Header( "Content-type: application/force-download");
			// Header( "Accept-Ranges: bytes ");
			// Header( "Accept-Length:" . filesize( $statFile ) );
			// Header( "Content-Disposition: attachment;filename=" . $statFile );
			// readfile( $statFile );exit;
			
		直到最后不使用缓冲区，直接读取文件，但是文件始终维持在80K左右。
3,检查了ngnix 配置问题。


这期间一直没有分析ngnix日志问题，直到后来问了老大，分析了ngnix日志，发现有如下报错:

[root@localhost logs]# more error.log 
2014/11/30 03:03:34 [crit] 25798#0: *1 open() "/data/nginx/fastcgi_temp/1/00/0000000001" failed (13: Permission denied) while reading upstream, client: 10.1.1.1, server: 124.205.66.74, request: "POST /test/tools/expor
t_tables.php HTTP/1.1", upstream: "fastcgi://unix:/dev/shm/php-fpm.sock:", host: "124.205.66.74", referrer: "http://www.test.com/test/tools/export_tables.php"

检查了fastcgi_temp权限：

[root@localhost nginx]# cd fastcgi_temp/
[root@localhost fastcgi_temp]# ll
total 80
drwx------ 4 root root 4096 Oct 23 06:23 0
drwx------ 3 root root 4096 Oct 23 06:23 1
drwx------ 5 root root 4096 Oct 23 06:23 2
drwx------ 4 root root 4096 Oct 23 06:23 3
drwx------ 5 root root 4096 Oct 23 06:23 4
drwx------ 7 root root 4096 Oct 23 06:23 5
drwx------ 3 root root 4096 Oct 23 06:23 6
drwx------ 5 root root 4096 Oct 23 06:23 7
drwx------ 5 root root 4096 Oct 23 06:23 8
drwx------ 5 root root 4096 Oct 23 06:23 9

发现都是root，暂时还不知道为什么变为root了

再查看vhosts里的配置，发现：
      fastcgi_pass	  unix:/dev/shm/php-fpm.sock;
	  # fastcgi_pass	  php-fpm-multi;
	    fastcgi_connect_timeout	60;
	    fastcgi_send_timeout	120;
	    fastcgi_read_timeout	120;
	    fastcgi_buffers             64 16k; 
	    fastcgi_buffer_size         64k;
      fastcgi_busy_buffers_size   256k;
	    fastcgi_temp_file_write_size 256k;
            fastcgi_index         index.php;
            include               fastcgi_params;
        }
各种网络搜索，应该是权限问题，要完全的解决这个问题，先要搞清楚 fastcgi_temp 目录的作用。

先简单的说一下 Nginx 的 buffer 机制，对于来自 FastCGI Server 的 Response，Nginx 将其缓冲到内存中，然后依次发送到客户端浏览器。缓冲区的大小由 fastcgi_buffers 和 fastcgi_buffer_size 两个值控制。

比如如下配置：
fastcgi_buffers      8 4K;
fastcgi_buffer_size  4K;
fastcgi_buffers 控制 nginx 最多创建 8 个大小为 4K 的缓冲区，而 fastcgi_buffer_size 则是处理 Response 时第一个缓冲区的大小，不包含在前者中。所以总计能创建的最大内存缓冲区大小是 8*4K+4K = 36k。而这些缓冲区是根据实际的 Response 大小动态生成的，并不是一次性创建的。比如一个 8K 的页面，Nginx 会创建 2*4K 共 2 个 buffers。

当 Response 小于等于 36k 时，所有数据当然全部在内存中处理。如果 Response 大于 36k 呢？fastcgi_temp 的作用就在于此。多出来的数据会被临时写入到文件中，放在这个目录下面。同时你会在 error.log 中看到一条类似 warning：

2010/03/13 03:42:22 [warn] 3994#0: *1 an upstream response is buffered to a temporary file
/usr/local/nginx/fastcgi_temp/1/00/0000000001 while reading upstream, 
client: 192.168.2.1,
server: pma.verdana.cn,
request: "POST /tbl_structure.php HTTP/1.1",
upstream: "fastcgi://127.0.0.1:9000", 
host: "pma.verdana.cn",
referrer: "http://pma.verdana.cn/tbl_structure.php"
显然，缓冲区设置的太小的话，Nginx 会频繁读写硬盘，对性能有很大的影响，但也不是越大越好，没意义，呵呵！

搞清楚了这些，再回到原来的问题上面，phpMyAdmin 生成的页面大小达到了 100+ Kb，内存中缓冲了 36Kb，剩下的会写入的文件中。而实际的情况是，运行 Nginx Process 的用户并没有 fastcgi_temp 目录的写权限，于是剩下的数据就丢失掉了，这也是为什么 phpMyAdmin 页面只显示了一部分的原因了。

找到原因后，解决方法就比较简单了，粗暴的删掉 fastcgi_temp 目录或者温柔的 chown + chmod 都可以解决问题。
最后解决办法：

删掉fastcgi_temp，然后重启ngnix
